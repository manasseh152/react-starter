/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as noCookieRouteImport } from './routes/(no-cookie)/route'
import { Route as cookieRouteImport } from './routes/(cookie)/route'
import { Route as IndexImport } from './routes/index'
import { Route as noCookieLoginIndexImport } from './routes/(no-cookie)/login/index'
import { Route as noCookieFormsIndexImport } from './routes/(no-cookie)/forms/index'
import { Route as cookieAdminIndexImport } from './routes/(cookie)/admin/index'

// Create/Update Routes

const noCookieRouteRoute = noCookieRouteImport.update({
  id: '/(no-cookie)',
  getParentRoute: () => rootRoute,
} as any)

const cookieRouteRoute = cookieRouteImport.update({
  id: '/(cookie)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const noCookieLoginIndexRoute = noCookieLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => noCookieRouteRoute,
} as any)

const noCookieFormsIndexRoute = noCookieFormsIndexImport.update({
  id: '/forms/',
  path: '/forms/',
  getParentRoute: () => noCookieRouteRoute,
} as any)

const cookieAdminIndexRoute = cookieAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => cookieRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(cookie)': {
      id: '/(cookie)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof cookieRouteImport
      parentRoute: typeof rootRoute
    }
    '/(no-cookie)': {
      id: '/(no-cookie)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof noCookieRouteImport
      parentRoute: typeof rootRoute
    }
    '/(cookie)/admin/': {
      id: '/(cookie)/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof cookieAdminIndexImport
      parentRoute: typeof cookieRouteImport
    }
    '/(no-cookie)/forms/': {
      id: '/(no-cookie)/forms/'
      path: '/forms'
      fullPath: '/forms'
      preLoaderRoute: typeof noCookieFormsIndexImport
      parentRoute: typeof noCookieRouteImport
    }
    '/(no-cookie)/login/': {
      id: '/(no-cookie)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof noCookieLoginIndexImport
      parentRoute: typeof noCookieRouteImport
    }
  }
}

// Create and export the route tree

interface cookieRouteRouteChildren {
  cookieAdminIndexRoute: typeof cookieAdminIndexRoute
}

const cookieRouteRouteChildren: cookieRouteRouteChildren = {
  cookieAdminIndexRoute: cookieAdminIndexRoute,
}

const cookieRouteRouteWithChildren = cookieRouteRoute._addFileChildren(
  cookieRouteRouteChildren,
)

interface noCookieRouteRouteChildren {
  noCookieFormsIndexRoute: typeof noCookieFormsIndexRoute
  noCookieLoginIndexRoute: typeof noCookieLoginIndexRoute
}

const noCookieRouteRouteChildren: noCookieRouteRouteChildren = {
  noCookieFormsIndexRoute: noCookieFormsIndexRoute,
  noCookieLoginIndexRoute: noCookieLoginIndexRoute,
}

const noCookieRouteRouteWithChildren = noCookieRouteRoute._addFileChildren(
  noCookieRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof noCookieRouteRouteWithChildren
  '/admin': typeof cookieAdminIndexRoute
  '/forms': typeof noCookieFormsIndexRoute
  '/login': typeof noCookieLoginIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof noCookieRouteRouteWithChildren
  '/admin': typeof cookieAdminIndexRoute
  '/forms': typeof noCookieFormsIndexRoute
  '/login': typeof noCookieLoginIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(cookie)': typeof cookieRouteRouteWithChildren
  '/(no-cookie)': typeof noCookieRouteRouteWithChildren
  '/(cookie)/admin/': typeof cookieAdminIndexRoute
  '/(no-cookie)/forms/': typeof noCookieFormsIndexRoute
  '/(no-cookie)/login/': typeof noCookieLoginIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/admin' | '/forms' | '/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin' | '/forms' | '/login'
  id:
    | '__root__'
    | '/'
    | '/(cookie)'
    | '/(no-cookie)'
    | '/(cookie)/admin/'
    | '/(no-cookie)/forms/'
    | '/(no-cookie)/login/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  cookieRouteRoute: typeof cookieRouteRouteWithChildren
  noCookieRouteRoute: typeof noCookieRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  cookieRouteRoute: cookieRouteRouteWithChildren,
  noCookieRouteRoute: noCookieRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(cookie)",
        "/(no-cookie)"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(cookie)": {
      "filePath": "(cookie)/route.tsx",
      "children": [
        "/(cookie)/admin/"
      ]
    },
    "/(no-cookie)": {
      "filePath": "(no-cookie)/route.tsx",
      "children": [
        "/(no-cookie)/forms/",
        "/(no-cookie)/login/"
      ]
    },
    "/(cookie)/admin/": {
      "filePath": "(cookie)/admin/index.tsx",
      "parent": "/(cookie)"
    },
    "/(no-cookie)/forms/": {
      "filePath": "(no-cookie)/forms/index.tsx",
      "parent": "/(no-cookie)"
    },
    "/(no-cookie)/login/": {
      "filePath": "(no-cookie)/login/index.tsx",
      "parent": "/(no-cookie)"
    }
  }
}
ROUTE_MANIFEST_END */
